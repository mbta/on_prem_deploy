---

- name: Install AudioScience signing key
  ansible.builtin.copy:
    src: audioscience.asc
    dest: /etc/apt/keyrings/audioscience.asc
    mode: "0644"

- name: Ensure AudioScience PPA is present
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/audioscience.asc]
      https://ppa.launchpadcontent.net/audioscience/release/ubuntu jammy main"
    filename: audioscience

- name: Install packages
  ansible.builtin.apt:
    name:
      - asihpi-dkms-4
      - awscli
      - amazon-ecr-credential-helper

- name: Configure NTP
  ansible.builtin.copy:
    src: timesyncd.conf
    dest: /etc/systemd/timesyncd.conf
    mode: "0644"
  register: scu_ntp_configuration

- name: Restart timesyncd if NTP change
  ansible.builtin.systemd:
    name: systemd-timesyncd
    daemon-reload: true
    state: restarted
  when: scu_ntp_configuration.changed # noqa: no-handler

- name: Install SSM Agent
  community.general.snap:
    name: amazon-ssm-agent
    classic: true

- name: Check SSM registration
  ansible.builtin.stat:
    path: /var/lib/amazon/ssm/registration
  register: scu_ssm_registration

- name: Stop SSM Agent
  ansible.builtin.systemd_service:
    name: snap.amazon-ssm-agent.amazon-ssm-agent.service
    state: stopped
  when: not scu_ssm_registration.stat.exists

- name: Register SSM Agent
  ansible.builtin.command:
    cmd: >-
      /snap/amazon-ssm-agent/current/amazon-ssm-agent -register
      -code {{ lookup('file', '/root/activation-code') }}
      -id {{ lookup('file', '/root/activation-id') }}
      -region us-east-1
  changed_when: true
  when: not scu_ssm_registration.stat.exists

- name: Start SSM Agent
  ansible.builtin.systemd_service:
    name: snap.amazon-ssm-agent.amazon-ssm-agent.service
    enabled: true
    state: started

- name: Install Docker
  ansible.builtin.include_role:
    name: docker

- name: Write scully systemd unit
  ansible.builtin.copy:
    src: scully.service
    dest: /etc/systemd/system/scully.service
    mode: "0644"

- name: Write scully-update systemd unit
  ansible.builtin.copy:
    src: scully-update.service
    dest: /etc/systemd/system/scully-update.service
    mode: "0644"

- name: Write scully-update systemd timer
  ansible.builtin.copy:
    src: scully-update.timer
    dest: /etc/systemd/system/scully-update.timer
    mode: "0644"

- name: Write set-audio-mode systemd unit
  ansible.builtin.copy:
    src: set-audio-mode.service
    dest: /etc/systemd/system/set-audio-mode.service
    mode: "0644"

- name: Write scully startup script
  ansible.builtin.copy:
    src: run-scully
    dest: /root/run-scully
    mode: "0755"

- name: Create .docker directory
  ansible.builtin.file:
    path: /root/.docker
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Write docker config
  ansible.builtin.copy:
    src: docker-config.json
    dest: /root/.docker/config.json
    mode: "0644"

- name: Write docker compose
  ansible.builtin.template:
    src: docker-compose.yaml.j2
    dest: /root/compose.yaml
    mode: "0644"

- name: Write create-scully-env script
  ansible.builtin.template:
    src: create-scully-env.j2
    dest: /root/create-scully-env
    mode: "0755"

- name: Write set-audio-mode script
  ansible.builtin.template:
    src: set-audio-mode.j2
    dest: /root/set-audio-mode
    mode: "0755"

- name: Enable and start scully systemd unit
  ansible.builtin.systemd_service:
    name: scully.service
    enabled: true
    state: started
  when: scu_autostart

- name: Enable and start scully-update systemd timer
  ansible.builtin.systemd_service:
    name: scully-update.timer
    enabled: true
    state: started
  when: scu_autostart
