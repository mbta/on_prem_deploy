---

name: CI

on:
  push:
  pull_request:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      # only run `asdf install` if we didn't hit the cache
      - uses: asdf-vm/actions/setup@v2
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      - uses: asdf-vm/actions/install@v2
        if: steps.asdf-cache.outputs.cache-hit != 'true'

  lint_scripts:
    name: Lint Scripts
    runs-on: ubuntu-22.04
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: ASDF cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
      - uses: mbta/actions/reshim-asdf@v1
      - name: Shellcheck
        run: shellcheck **/*.sh

  lint_ansible:
    name: Lint Ansible
    runs-on: ubuntu-22.04
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - name: ASDF cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
      - name: Python venv cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('uv.lock') }}
      - uses: mbta/actions/reshim-asdf@v1
      - name: Run ansible-lint
        run: uv run ansible-lint --format full
        working-directory: linux
      - name: Run yamllint
        run: uv run yamllint .
